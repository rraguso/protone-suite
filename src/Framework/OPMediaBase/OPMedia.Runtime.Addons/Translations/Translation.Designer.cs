//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OPMedia.Runtime.Addons.Translations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Translation {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Translation() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OPMedia.Runtime.Addons.Translations.Translation", typeof(Translation).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addon Name.
        /// </summary>
        internal static string TXT_ADDON_NAME {
            get {
                return ResourceManager.GetString("TXT_ADDON_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addon Settings.
        /// </summary>
        internal static string TXT_ADDON_SETTINGS {
            get {
                return ResourceManager.GetString("TXT_ADDON_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to modify the new addons configuration, the program needs to be restarted.        ///
        ///        ///
        ///Is it OK to restart now ?.
        /// </summary>
        internal static string TXT_ADDONS_CHANGED_RESTART {
            get {
                return ResourceManager.GetString("TXT_ADDONS_CHANGED_RESTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since you have canceled the restart,  your add-on configuration will not be changed..
        /// </summary>
        internal static string TXT_ADDONS_NOT_CHANGED {
            get {
                return ResourceManager.GetString("TXT_ADDONS_NOT_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled Addons.
        /// </summary>
        internal static string TXT_ADDONSETTINGS {
            get {
                return ResourceManager.GetString("TXT_ADDONSETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked addons are currently enabled. Use the checkboxes to enable/disable addons. Addons marked with * are required and cannot be disabled. A program restart will be needed to apply the new addons configuration..
        /// </summary>
        internal static string TXT_ADDONSLIST {
            get {
                return ResourceManager.GetString("TXT_ADDONSLIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked addons are currently enabled. Use the checkboxes to enable/disable addons. Addons marked with * are required and cannot be disabled..
        /// </summary>
        internal static string TXT_ADDONSLIST_NORESTART {
            get {
                return ResourceManager.GetString("TXT_ADDONSLIST_NORESTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The addon library you have selected cannot be installed, because it is a built-in library.        ///
        ///        ///
        ///        ///
        ///            ///
        ///        ///
        ///        ///
        ///If you intend to enable/disable the addons from the built-in library, please use the addons checkboxes..
        /// </summary>
        internal static string TXT_CANT_INSTALL_BUILTIN {
            get {
                return ResourceManager.GetString("TXT_CANT_INSTALL_BUILTIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The addon library you have specified cannot be uninstalled, because it is a built-in library.        ///
        ///        ///
        ///        ///
        ///        ///
        ///        ///
        ///        ///
        ///If you intend to enable/disable the addons from the built-in library, please use the addons checkboxes..
        /// </summary>
        internal static string TXT_CANT_UNINSTALL_BUILTIN {
            get {
                return ResourceManager.GetString("TXT_CANT_UNINSTALL_BUILTIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install new addon(s) ....
        /// </summary>
        internal static string TXT_INSTALL_ADDONLIB {
            get {
                return ResourceManager.GetString("TXT_INSTALL_ADDONLIB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OPMedia Addon Libraries (*.dll)|*.dll||.
        /// </summary>
        internal static string TXT_INSTALLADDONFILTER {
            get {
                return ResourceManager.GetString("TXT_INSTALLADDONFILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an OPMedia addon library to install:.
        /// </summary>
        internal static string TXT_INSTALLADDONS {
            get {
                return ResourceManager.GetString("TXT_INSTALLADDONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DLL file you have selected is not a valid OPMedia extension library.          ///
        ///        ///
        ///        ///
        ///        ///
        ///Note: If you believe, however, that the respective file should have been a valid extension,         ///
        ///        ///
        ///you are advised to contact the producer or the supplier of this DLL..
        /// </summary>
        internal static string TXT_INVALID_ADDON {
            get {
                return ResourceManager.GetString("TXT_INVALID_ADDON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DLL file you have selected is not a valid OPMedia extension library.        ///
        ///        ///
        ///        ///
        ///        ///
        ///A valid OPMedia extension library file name should follow the convention: &lt;Addon-Name&gt;Extension.dll..
        /// </summary>
        internal static string TXT_INVALID_NAME {
            get {
                return ResourceManager.GetString("TXT_INVALID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Navigation.
        /// </summary>
        internal static string TXT_NAV_ADDONS {
            get {
                return ResourceManager.GetString("TXT_NAV_ADDONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No navigation addons are currently configured. The application cannot run without them.
        ///You must to select and enable at least one navigation addon in order to continue..
        /// </summary>
        internal static string TXT_NO_NAV_ADDONS {
            get {
                return ResourceManager.GetString("TXT_NO_NAV_ADDONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected item cannot be previewed. 
        ///You must use an external program to view it..
        /// </summary>
        internal static string TXT_NOTIFY_NON_PREVIEW {
            get {
                return ResourceManager.GetString("TXT_NOTIFY_NON_PREVIEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To preview the selected item, double click it or press Enter..
        /// </summary>
        internal static string TXT_NOTIFY_PREVIEW {
            get {
                return ResourceManager.GetString("TXT_NOTIFY_PREVIEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic preview of selected item is starting in a couple of seconds. 
        ///Press Escape to cancel ....
        /// </summary>
        internal static string TXT_PREPARE_PREVIEW {
            get {
                return ResourceManager.GetString("TXT_PREPARE_PREVIEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview / Visualization.
        /// </summary>
        internal static string TXT_PREVIEW_ADDONS {
            get {
                return ResourceManager.GetString("TXT_PREVIEW_ADDONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic preview of selected item has been canceled. 
        ///Select another item or press Enter to preview the current item..
        /// </summary>
        internal static string TXT_PREVIEW_CANCELED {
            get {
                return ResourceManager.GetString("TXT_PREVIEW_CANCELED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Property Interaction.
        /// </summary>
        internal static string TXT_PROP_ADDONS {
            get {
                return ResourceManager.GetString("TXT_PROP_ADDONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select all addons.
        /// </summary>
        internal static string TXT_SELECTALLADDONS {
            get {
                return ResourceManager.GetString("TXT_SELECTALLADDONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The addon library you are trying to uninstall provides multiple features:        ///
        ///        ///
        ///        ///
        ///{0}        ///
        ///        ///
        ///If you continue, all these features will no longer be available. Is it OK to proceed ?.
        /// </summary>
        internal static string TXT_SHAREDADDONS {
            get {
                return ResourceManager.GetString("TXT_SHAREDADDONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall addon(s) ....
        /// </summary>
        internal static string TXT_UNINSTALL_ADDONLIB {
            get {
                return ResourceManager.GetString("TXT_UNINSTALL_ADDONLIB", resourceCulture);
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 

namespace OPMedia.Runtime.ProTONE.BSP_V1
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BSPSubtitlesBinding", Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SubtitleUploadData))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SubtitleData))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MovieInfoData))]
    public partial class BSPSubtitlesService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback helloWorldOperationCompleted;

        private System.Threading.SendOrPostCallback logInOperationCompleted;

        private System.Threading.SendOrPostCallback logOutOperationCompleted;

        private System.Threading.SendOrPostCallback rateSubtitleOperationCompleted;

        private System.Threading.SendOrPostCallback sendMovieInfoOperationCompleted;

        private System.Threading.SendOrPostCallback getMovieInfoOperationCompleted;

        private System.Threading.SendOrPostCallback searchSubtitlesOperationCompleted;

        private System.Threading.SendOrPostCallback tryUploadSubtitlesOperationCompleted;

        private System.Threading.SendOrPostCallback uploadSubtitlesOperationCompleted;

        /// <remarks/>
        public BSPSubtitlesService(string url)
        {
            this.Url = url;
        }

        /// <remarks/>
        public event helloWorldCompletedEventHandler helloWorldCompleted;

        /// <remarks/>
        public event logInCompletedEventHandler logInCompleted;

        /// <remarks/>
        public event logOutCompletedEventHandler logOutCompleted;

        /// <remarks/>
        public event rateSubtitleCompletedEventHandler rateSubtitleCompleted;

        /// <remarks/>
        public event sendMovieInfoCompletedEventHandler sendMovieInfoCompleted;

        /// <remarks/>
        public event getMovieInfoCompletedEventHandler getMovieInfoCompleted;

        /// <remarks/>
        public event searchSubtitlesCompletedEventHandler searchSubtitlesCompleted;

        /// <remarks/>
        public event tryUploadSubtitlesCompletedEventHandler tryUploadSubtitlesCompleted;

        /// <remarks/>
        public event uploadSubtitlesCompletedEventHandler uploadSubtitlesCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#helloWorld", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string helloWorld()
        {
            object[] results = this.Invoke("helloWorld", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginhelloWorld(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("helloWorld", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndhelloWorld(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void helloWorldAsync()
        {
            this.helloWorldAsync(null);
        }

        /// <remarks/>
        public void helloWorldAsync(object userState)
        {
            if ((this.helloWorldOperationCompleted == null))
            {
                this.helloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhelloWorldOperationCompleted);
            }
            this.InvokeAsync("helloWorld", new object[0], this.helloWorldOperationCompleted, userState);
        }

        private void OnhelloWorldOperationCompleted(object arg)
        {
            if ((this.helloWorldCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.helloWorldCompleted(this, new helloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#logIn", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SubtitlesResult logIn(string username, string password, string AppID)
        {
            object[] results = this.Invoke("logIn", new object[] {
                    username,
                    password,
                    AppID});
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginlogIn(string username, string password, string AppID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("logIn", new object[] {
                    username,
                    password,
                    AppID}, callback, asyncState);
        }

        /// <remarks/>
        public SubtitlesResult EndlogIn(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public void logInAsync(string username, string password, string AppID)
        {
            this.logInAsync(username, password, AppID, null);
        }

        /// <remarks/>
        public void logInAsync(string username, string password, string AppID, object userState)
        {
            if ((this.logInOperationCompleted == null))
            {
                this.logInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogInOperationCompleted);
            }
            this.InvokeAsync("logIn", new object[] {
                    username,
                    password,
                    AppID}, this.logInOperationCompleted, userState);
        }

        private void OnlogInOperationCompleted(object arg)
        {
            if ((this.logInCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logInCompleted(this, new logInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#logOut", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SubtitlesResult logOut(string handle)
        {
            object[] results = this.Invoke("logOut", new object[] {
                    handle});
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginlogOut(string handle, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("logOut", new object[] {
                    handle}, callback, asyncState);
        }

        /// <remarks/>
        public SubtitlesResult EndlogOut(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public void logOutAsync(string handle)
        {
            this.logOutAsync(handle, null);
        }

        /// <remarks/>
        public void logOutAsync(string handle, object userState)
        {
            if ((this.logOutOperationCompleted == null))
            {
                this.logOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogOutOperationCompleted);
            }
            this.InvokeAsync("logOut", new object[] {
                    handle}, this.logOutOperationCompleted, userState);
        }

        private void OnlogOutOperationCompleted(object arg)
        {
            if ((this.logOutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logOutCompleted(this, new logOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#rateSubtitle", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SubtitlesResult rateSubtitle(string handle, int subid, float rating)
        {
            object[] results = this.Invoke("rateSubtitle", new object[] {
                    handle,
                    subid,
                    rating});
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginrateSubtitle(string handle, int subid, float rating, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("rateSubtitle", new object[] {
                    handle,
                    subid,
                    rating}, callback, asyncState);
        }

        /// <remarks/>
        public SubtitlesResult EndrateSubtitle(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public void rateSubtitleAsync(string handle, int subid, float rating)
        {
            this.rateSubtitleAsync(handle, subid, rating, null);
        }

        /// <remarks/>
        public void rateSubtitleAsync(string handle, int subid, float rating, object userState)
        {
            if ((this.rateSubtitleOperationCompleted == null))
            {
                this.rateSubtitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrateSubtitleOperationCompleted);
            }
            this.InvokeAsync("rateSubtitle", new object[] {
                    handle,
                    subid,
                    rating}, this.rateSubtitleOperationCompleted, userState);
        }

        private void OnrateSubtitleOperationCompleted(object arg)
        {
            if ((this.rateSubtitleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rateSubtitleCompleted(this, new rateSubtitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#sendMovieInfo", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SubtitlesResult sendMovieInfo(string handle, string movieHash, string movieName, string fileName, long movieSize, string imdbid, int season, int episode, int year)
        {
            object[] results = this.Invoke("sendMovieInfo", new object[] {
                    handle,
                    movieHash,
                    movieName,
                    fileName,
                    movieSize,
                    imdbid,
                    season,
                    episode,
                    year});
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsendMovieInfo(string handle, string movieHash, string movieName, string fileName, long movieSize, string imdbid, int season, int episode, int year, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("sendMovieInfo", new object[] {
                    handle,
                    movieHash,
                    movieName,
                    fileName,
                    movieSize,
                    imdbid,
                    season,
                    episode,
                    year}, callback, asyncState);
        }

        /// <remarks/>
        public SubtitlesResult EndsendMovieInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public void sendMovieInfoAsync(string handle, string movieHash, string movieName, string fileName, long movieSize, string imdbid, int season, int episode, int year)
        {
            this.sendMovieInfoAsync(handle, movieHash, movieName, fileName, movieSize, imdbid, season, episode, year, null);
        }

        /// <remarks/>
        public void sendMovieInfoAsync(string handle, string movieHash, string movieName, string fileName, long movieSize, string imdbid, int season, int episode, int year, object userState)
        {
            if ((this.sendMovieInfoOperationCompleted == null))
            {
                this.sendMovieInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMovieInfoOperationCompleted);
            }
            this.InvokeAsync("sendMovieInfo", new object[] {
                    handle,
                    movieHash,
                    movieName,
                    fileName,
                    movieSize,
                    imdbid,
                    season,
                    episode,
                    year}, this.sendMovieInfoOperationCompleted, userState);
        }

        private void OnsendMovieInfoOperationCompleted(object arg)
        {
            if ((this.sendMovieInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMovieInfoCompleted(this, new sendMovieInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#getMovieInfo", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public MovieInfoResult getMovieInfo(string handle, string movieHash, long movieSize)
        {
            object[] results = this.Invoke("getMovieInfo", new object[] {
                    handle,
                    movieHash,
                    movieSize});
            return ((MovieInfoResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetMovieInfo(string handle, string movieHash, long movieSize, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getMovieInfo", new object[] {
                    handle,
                    movieHash,
                    movieSize}, callback, asyncState);
        }

        /// <remarks/>
        public MovieInfoResult EndgetMovieInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MovieInfoResult)(results[0]));
        }

        /// <remarks/>
        public void getMovieInfoAsync(string handle, string movieHash, long movieSize)
        {
            this.getMovieInfoAsync(handle, movieHash, movieSize, null);
        }

        /// <remarks/>
        public void getMovieInfoAsync(string handle, string movieHash, long movieSize, object userState)
        {
            if ((this.getMovieInfoOperationCompleted == null))
            {
                this.getMovieInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMovieInfoOperationCompleted);
            }
            this.InvokeAsync("getMovieInfo", new object[] {
                    handle,
                    movieHash,
                    movieSize}, this.getMovieInfoOperationCompleted, userState);
        }

        private void OngetMovieInfoOperationCompleted(object arg)
        {
            if ((this.getMovieInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMovieInfoCompleted(this, new getMovieInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#searchSubtitles", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SearchResult searchSubtitles(string handle, string movieHash, long movieSize, string languageId, string imdbId)
        {
            object[] results = this.Invoke("searchSubtitles", new object[] {
                    handle,
                    movieHash,
                    movieSize,
                    languageId,
                    imdbId});
            return ((SearchResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchSubtitles(string handle, string movieHash, long movieSize, string languageId, string imdbId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchSubtitles", new object[] {
                    handle,
                    movieHash,
                    movieSize,
                    languageId,
                    imdbId}, callback, asyncState);
        }

        /// <remarks/>
        public SearchResult EndsearchSubtitles(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SearchResult)(results[0]));
        }

        /// <remarks/>
        public void searchSubtitlesAsync(string handle, string movieHash, long movieSize, string languageId, string imdbId)
        {
            this.searchSubtitlesAsync(handle, movieHash, movieSize, languageId, imdbId, null);
        }

        /// <remarks/>
        public void searchSubtitlesAsync(string handle, string movieHash, long movieSize, string languageId, string imdbId, object userState)
        {
            if ((this.searchSubtitlesOperationCompleted == null))
            {
                this.searchSubtitlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchSubtitlesOperationCompleted);
            }
            this.InvokeAsync("searchSubtitles", new object[] {
                    handle,
                    movieHash,
                    movieSize,
                    languageId,
                    imdbId}, this.searchSubtitlesOperationCompleted, userState);
        }

        private void OnsearchSubtitlesOperationCompleted(object arg)
        {
            if ((this.searchSubtitlesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchSubtitlesCompleted(this, new searchSubtitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#tryUploadSubtitles", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SearchResult tryUploadSubtitles(string handle, SubUpload subData)
        {
            object[] results = this.Invoke("tryUploadSubtitles", new object[] {
                    handle,
                    subData});
            return ((SearchResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegintryUploadSubtitles(string handle, SubUpload subData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("tryUploadSubtitles", new object[] {
                    handle,
                    subData}, callback, asyncState);
        }

        /// <remarks/>
        public SearchResult EndtryUploadSubtitles(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SearchResult)(results[0]));
        }

        /// <remarks/>
        public void tryUploadSubtitlesAsync(string handle, SubUpload subData)
        {
            this.tryUploadSubtitlesAsync(handle, subData, null);
        }

        /// <remarks/>
        public void tryUploadSubtitlesAsync(string handle, SubUpload subData, object userState)
        {
            if ((this.tryUploadSubtitlesOperationCompleted == null))
            {
                this.tryUploadSubtitlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OntryUploadSubtitlesOperationCompleted);
            }
            this.InvokeAsync("tryUploadSubtitles", new object[] {
                    handle,
                    subData}, this.tryUploadSubtitlesOperationCompleted, userState);
        }

        private void OntryUploadSubtitlesOperationCompleted(object arg)
        {
            if ((this.tryUploadSubtitlesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tryUploadSubtitlesCompleted(this, new tryUploadSubtitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.bsplayer-subtitles.com/v1.php#uploadSubtitles", RequestNamespace = "http://api.bsplayer-subtitles.com/v1.php", ResponseNamespace = "http://api.bsplayer-subtitles.com/v1.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SubtitlesResult uploadSubtitles(string handle, SubUpload subData, string imdbid, int uploadType)
        {
            object[] results = this.Invoke("uploadSubtitles", new object[] {
                    handle,
                    subData,
                    imdbid,
                    uploadType});
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginuploadSubtitles(string handle, SubUpload subData, string imdbid, int uploadType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("uploadSubtitles", new object[] {
                    handle,
                    subData,
                    imdbid,
                    uploadType}, callback, asyncState);
        }

        /// <remarks/>
        public SubtitlesResult EnduploadSubtitles(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubtitlesResult)(results[0]));
        }

        /// <remarks/>
        public void uploadSubtitlesAsync(string handle, SubUpload subData, string imdbid, int uploadType)
        {
            this.uploadSubtitlesAsync(handle, subData, imdbid, uploadType, null);
        }

        /// <remarks/>
        public void uploadSubtitlesAsync(string handle, SubUpload subData, string imdbid, int uploadType, object userState)
        {
            if ((this.uploadSubtitlesOperationCompleted == null))
            {
                this.uploadSubtitlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadSubtitlesOperationCompleted);
            }
            this.InvokeAsync("uploadSubtitles", new object[] {
                    handle,
                    subData,
                    imdbid,
                    uploadType}, this.uploadSubtitlesOperationCompleted, userState);
        }

        private void OnuploadSubtitlesOperationCompleted(object arg)
        {
            if ((this.uploadSubtitlesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadSubtitlesCompleted(this, new uploadSubtitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    public partial class SubtitlesResult
    {

        private string resultField;

        private string statusField;

        private string dataField;

        /// <remarks/>
        public string result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }

        /// <remarks/>
        public string status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        public string data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    public partial class SubtitleUploadData
    {

        private int subSizeField;

        private string subLangField;

        private string subNameField;

        private string subFormatField;

        private string subHashField;

        private int subRatingField;

        private int codePageField;

        private int seasonField;

        private int episodeField;

        private string movieHashField;

        private long movieSizeField;

        private float movieFPSField;

        private string movieNameField;

        private string encsubtitleField;

        /// <remarks/>
        public int subSize
        {
            get
            {
                return this.subSizeField;
            }
            set
            {
                this.subSizeField = value;
            }
        }

        /// <remarks/>
        public string subLang
        {
            get
            {
                return this.subLangField;
            }
            set
            {
                this.subLangField = value;
            }
        }

        /// <remarks/>
        public string subName
        {
            get
            {
                return this.subNameField;
            }
            set
            {
                this.subNameField = value;
            }
        }

        /// <remarks/>
        public string subFormat
        {
            get
            {
                return this.subFormatField;
            }
            set
            {
                this.subFormatField = value;
            }
        }

        /// <remarks/>
        public string subHash
        {
            get
            {
                return this.subHashField;
            }
            set
            {
                this.subHashField = value;
            }
        }

        /// <remarks/>
        public int subRating
        {
            get
            {
                return this.subRatingField;
            }
            set
            {
                this.subRatingField = value;
            }
        }

        /// <remarks/>
        public int codePage
        {
            get
            {
                return this.codePageField;
            }
            set
            {
                this.codePageField = value;
            }
        }

        /// <remarks/>
        public int season
        {
            get
            {
                return this.seasonField;
            }
            set
            {
                this.seasonField = value;
            }
        }

        /// <remarks/>
        public int episode
        {
            get
            {
                return this.episodeField;
            }
            set
            {
                this.episodeField = value;
            }
        }

        /// <remarks/>
        public string movieHash
        {
            get
            {
                return this.movieHashField;
            }
            set
            {
                this.movieHashField = value;
            }
        }

        /// <remarks/>
        public long movieSize
        {
            get
            {
                return this.movieSizeField;
            }
            set
            {
                this.movieSizeField = value;
            }
        }

        /// <remarks/>
        public float movieFPS
        {
            get
            {
                return this.movieFPSField;
            }
            set
            {
                this.movieFPSField = value;
            }
        }

        /// <remarks/>
        public string movieName
        {
            get
            {
                return this.movieNameField;
            }
            set
            {
                this.movieNameField = value;
            }
        }

        /// <remarks/>
        public string encsubtitle
        {
            get
            {
                return this.encsubtitleField;
            }
            set
            {
                this.encsubtitleField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    public partial class SubUpload
    {

        private string movieIMBDIDField;

        private string movieIMBDRatingField;

        private string movieYearField;

        private string movieNameField;

        private SubtitleUploadData[] dataField;

        /// <remarks/>
        public string movieIMBDID
        {
            get
            {
                return this.movieIMBDIDField;
            }
            set
            {
                this.movieIMBDIDField = value;
            }
        }

        /// <remarks/>
        public string movieIMBDRating
        {
            get
            {
                return this.movieIMBDRatingField;
            }
            set
            {
                this.movieIMBDRatingField = value;
            }
        }

        /// <remarks/>
        public string movieYear
        {
            get
            {
                return this.movieYearField;
            }
            set
            {
                this.movieYearField = value;
            }
        }

        /// <remarks/>
        public string movieName
        {
            get
            {
                return this.movieNameField;
            }
            set
            {
                this.movieNameField = value;
            }
        }

        /// <remarks/>
        public SubtitleUploadData[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    public partial class SubtitleData
    {

        private int subIDField;

        private int subSizeField;

        private string subDownloadLinkField;

        private string subLangField;

        private string subNameField;

        private string subFormatField;

        private string subHashField;

        private int subRatingField;

        private int seasonField;

        private int episodeField;

        private string encsubtitleField;

        private string movieIMBDIDField;

        private string movieIMBDRatingField;

        private string movieYearField;

        private string movieNameField;

        private string movieHashField;

        private long movieSizeField;

        private float movieFPSField;

        /// <remarks/>
        public int subID
        {
            get
            {
                return this.subIDField;
            }
            set
            {
                this.subIDField = value;
            }
        }

        /// <remarks/>
        public int subSize
        {
            get
            {
                return this.subSizeField;
            }
            set
            {
                this.subSizeField = value;
            }
        }

        /// <remarks/>
        public string subDownloadLink
        {
            get
            {
                return this.subDownloadLinkField;
            }
            set
            {
                this.subDownloadLinkField = value;
            }
        }

        /// <remarks/>
        public string subLang
        {
            get
            {
                return this.subLangField;
            }
            set
            {
                this.subLangField = value;
            }
        }

        /// <remarks/>
        public string subName
        {
            get
            {
                return this.subNameField;
            }
            set
            {
                this.subNameField = value;
            }
        }

        /// <remarks/>
        public string subFormat
        {
            get
            {
                return this.subFormatField;
            }
            set
            {
                this.subFormatField = value;
            }
        }

        /// <remarks/>
        public string subHash
        {
            get
            {
                return this.subHashField;
            }
            set
            {
                this.subHashField = value;
            }
        }

        /// <remarks/>
        public int subRating
        {
            get
            {
                return this.subRatingField;
            }
            set
            {
                this.subRatingField = value;
            }
        }

        /// <remarks/>
        public int season
        {
            get
            {
                return this.seasonField;
            }
            set
            {
                this.seasonField = value;
            }
        }

        /// <remarks/>
        public int episode
        {
            get
            {
                return this.episodeField;
            }
            set
            {
                this.episodeField = value;
            }
        }

        /// <remarks/>
        public string encsubtitle
        {
            get
            {
                return this.encsubtitleField;
            }
            set
            {
                this.encsubtitleField = value;
            }
        }

        /// <remarks/>
        public string movieIMBDID
        {
            get
            {
                return this.movieIMBDIDField;
            }
            set
            {
                this.movieIMBDIDField = value;
            }
        }

        /// <remarks/>
        public string movieIMBDRating
        {
            get
            {
                return this.movieIMBDRatingField;
            }
            set
            {
                this.movieIMBDRatingField = value;
            }
        }

        /// <remarks/>
        public string movieYear
        {
            get
            {
                return this.movieYearField;
            }
            set
            {
                this.movieYearField = value;
            }
        }

        /// <remarks/>
        public string movieName
        {
            get
            {
                return this.movieNameField;
            }
            set
            {
                this.movieNameField = value;
            }
        }

        /// <remarks/>
        public string movieHash
        {
            get
            {
                return this.movieHashField;
            }
            set
            {
                this.movieHashField = value;
            }
        }

        /// <remarks/>
        public long movieSize
        {
            get
            {
                return this.movieSizeField;
            }
            set
            {
                this.movieSizeField = value;
            }
        }

        /// <remarks/>
        public float movieFPS
        {
            get
            {
                return this.movieFPSField;
            }
            set
            {
                this.movieFPSField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    public partial class SearchResult
    {

        private SubtitlesResult resultField;

        private SubtitleData[] dataField;

        /// <remarks/>
        public SubtitlesResult result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }

        /// <remarks/>
        public SubtitleData[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    public partial class MovieInfoData
    {

        private string movieIMDBField;

        private string movieNameField;

        private int seasonField;

        private int episodeField;

        /// <remarks/>
        public string movieIMDB
        {
            get
            {
                return this.movieIMDBField;
            }
            set
            {
                this.movieIMDBField = value;
            }
        }

        /// <remarks/>
        public string movieName
        {
            get
            {
                return this.movieNameField;
            }
            set
            {
                this.movieNameField = value;
            }
        }

        /// <remarks/>
        public int season
        {
            get
            {
                return this.seasonField;
            }
            set
            {
                this.seasonField = value;
            }
        }

        /// <remarks/>
        public int episode
        {
            get
            {
                return this.episodeField;
            }
            set
            {
                this.episodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://api.bsplayer-subtitles.com/v1.php")]
    public partial class MovieInfoResult
    {

        private SubtitlesResult resultField;

        private MovieInfoData[] dataField;

        /// <remarks/>
        public SubtitlesResult result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }

        /// <remarks/>
        public MovieInfoData[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void helloWorldCompletedEventHandler(object sender, helloWorldCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class helloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal helloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void logInCompletedEventHandler(object sender, logInCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal logInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SubtitlesResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SubtitlesResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void logOutCompletedEventHandler(object sender, logOutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal logOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SubtitlesResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SubtitlesResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void rateSubtitleCompletedEventHandler(object sender, rateSubtitleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rateSubtitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal rateSubtitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SubtitlesResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SubtitlesResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void sendMovieInfoCompletedEventHandler(object sender, sendMovieInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMovieInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal sendMovieInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SubtitlesResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SubtitlesResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getMovieInfoCompletedEventHandler(object sender, getMovieInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMovieInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMovieInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MovieInfoResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MovieInfoResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void searchSubtitlesCompletedEventHandler(object sender, searchSubtitlesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchSubtitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchSubtitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SearchResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SearchResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tryUploadSubtitlesCompletedEventHandler(object sender, tryUploadSubtitlesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tryUploadSubtitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal tryUploadSubtitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SearchResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SearchResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void uploadSubtitlesCompletedEventHandler(object sender, uploadSubtitlesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadSubtitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal uploadSubtitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SubtitlesResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SubtitlesResult)(this.results[0]));
            }
        }
    }
}